import React from 'react';
import { Box } from 'ink';
import { useMultiStyleConfig } from '../theme.js';
import { TableHeader } from './table-header.js';
import { TableCell } from './table-cell.js';
import { TableValue } from './table-value.js';
import { TableBody } from './table-body.js';
import { TableRow } from './table-row.js';
import { TableHeaderCell } from './table-header-cell.js';
import { TableHeaderValue } from './table-header-value.js';
import { useTableState } from './use-table-state.js';
import { useTable } from './use-table.js';
export function Table({ isFocused = true, columns, rows, visibleRowCount, }) {
    const state = useTableState({ visibleRowCount, rows });
    useTable({ isFocused, state });
    const styles = useMultiStyleConfig('Table');
    return (React.createElement(Box, { ...styles['table'] },
        React.createElement(TableHeader, null, columns.map(column => (React.createElement(TableHeaderCell, { key: column.key },
            React.createElement(TableHeaderValue, null, column.label))))),
        React.createElement(TableBody, null, state.visibleRows.map(row => (React.createElement(TableRow, { key: row.index, isFocused: state.focusedIndex === row.index, isFirst: row.index === 0, isLast: row.index === rows.length - 1 }, columns.map((column, columnIndex) => (React.createElement(TableCell, { key: column.key, isFocused: state.focusedIndex === row.index, isFirstRow: row.index === 0, isLastRow: row.index === rows.length - 1, isFirstCell: columnIndex === 0, isLastCell: columnIndex === columns.length - 1 },
            React.createElement(TableValue, { isFocused: state.focusedIndex === row.index, isFirstRow: row.index === 0, isLastRow: row.index === rows.length - 1, isFirstCell: columnIndex === 0, isLastCell: columnIndex === columns.length - 1 }, String(row.data[column.key])))))))))));
}
//# sourceMappingURL=table.js.map